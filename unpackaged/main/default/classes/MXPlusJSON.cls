//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
// The supplied json has fields with names that are not valid in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.

public class MXPlusJSON {

	public String transaction_date {get;set;} // in json: transaction.date
	public String transaction_time {get;set;} // in json: transaction.time
	public String transaction_id {get;set;} // in json: transaction.id
	public String transaction_status {get;set;} // in json: transaction.status
	public String transaction_service {get;set;} // in json: transaction.service
	public String transaction_servicecategory {get;set;} // in json: transaction.servicecategory
	public String transaction_closeddate {get;set;} // in json: transaction.closeddate
	public String transaction_closedtime {get;set;} // in json: transaction.closedtime
	public Double transaction_supplier_totaldatasize {get;set;} // in json: transaction.supplier.totaldatasize
	public Integer transaction_supplier_totalfiles {get;set;} // in json: transaction.supplier.totalfiles
	public Double transaction_oem_totaldatasize {get;set;} // in json: transaction.oem.totaldatasize
	public Double transaction_oem_totalfiles {get;set;} // in json: transaction.oem.totalfiles
	public Double transaction_serviceprovider_totaldatasize {get;set;} // in json: transaction.serviceprovider.totaldatasize
	public Integer transaction_serviceprovider_totalfiles {get;set;} // in json: transaction.serviceprovider.totalfiles
	public Integer transaction_totalcomments {get;set;} // in json: transaction.totalcomments
	public Integer transaction_hours {get;set;} // in json: transaction.hours
	public String user_id {get;set;} // in json: user.id
	public String user_username {get;set;} // in json: user.username
	public String user_full_name {get;set;} // in json: user.full_name
	public String transaction_servicedatadirection {get;set;} // in json: transaction.servicedatadirection
	public String transaction_supplier {get;set;} // in json: transaction.supplier
	public String transaction_oem {get;set;} // in json: transaction.oem
	public String transaction_coo {get;set;} // in json: transaction.coo
	public String transaction_usergroup {get;set;} // in json: transaction.usergroup
	public String transaction_assigneduser {get;set;} // in json: transaction.assigneduser.full_name 

	public MXPlusJSON(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'transaction.date') {
						transaction_date = parser.getText();
					} else if (text == 'transaction.time') {
						transaction_time = parser.getText();
					} else if (text == 'transaction.id') {
						transaction_id = parser.getText();
					} else if (text == 'transaction.status') {
						transaction_status = parser.getText();
					} else if (text == 'transaction.servicedatadirection') {
						transaction_servicedatadirection = parser.getText();
					} else if (text == 'transaction.supplier') {
						transaction_supplier = parser.getText();
					} else if (text == 'transaction.oem') {
						transaction_oem = parser.getText();
					} else if (text == 'transaction.coo') {
						transaction_coo = parser.getText();
					} else if (text == 'transaction.usergroup') {
						transaction_usergroup = parser.getText();
					} else if (text == 'transaction.service') {
						transaction_service = parser.getText();
					} else if (text == 'transaction.servicecategory') {
						transaction_servicecategory = parser.getText();
					} else if (text == 'transaction.closeddate') {
						transaction_closeddate = parser.getText();
					} else if (text == 'transaction.closedtime') {
						transaction_closedtime = parser.getText();
					} else if (text == 'transaction.supplier.totaldatasize') {
						transaction_supplier_totaldatasize = parser.getDoubleValue();
					} else if (text == 'transaction.supplier.totalfiles') {
						transaction_supplier_totalfiles = parser.getIntegerValue();
					} else if (text == 'transaction.oem.totaldatasize') {
						transaction_oem_totaldatasize = parser.getDoubleValue();
					} else if (text == 'transaction.oem.totalfiles') {
						transaction_oem_totalfiles = parser.getDoubleValue();
					} else if (text == 'transaction.serviceprovider.totaldatasize') {
						transaction_serviceprovider_totaldatasize = parser.getDoubleValue();
					} else if (text == 'transaction.serviceprovider.totalfiles') {
						transaction_serviceprovider_totalfiles = parser.getIntegerValue();
					} else if (text == 'transaction.totalcomments') {
						transaction_totalcomments = parser.getIntegerValue();
					} else if (text == 'transaction.hours') {
						transaction_hours = parser.getIntegerValue();
					} else if (text == 'user.id') {
						user_id = parser.getText();
					} else if (text == 'user.username') {
						user_username = parser.getText();
					} else if (text == 'user.full_name') {
						user_full_name = parser.getText();
					} else if (text == 'transaction.assigneduser.full_name') {
						transaction_assigneduser = parser.getText();
					} else {
						System.debug(LoggingLevel.WARN, 'MXPlusJSON consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	
	public static List<MXPlusJSON> parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return arrayOfMXPlusJSON(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	


    private static List<MXPlusJSON> arrayOfMXPlusJSON(System.JSONParser p) {
        List<MXPlusJSON> res = new List<MXPlusJSON>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new MXPlusJSON(p));
        }
        return res;
    }



}